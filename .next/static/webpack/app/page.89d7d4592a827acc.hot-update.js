"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/env-check.ts":
/*!**************************!*\
  !*** ./lib/env-check.ts ***!
  \**************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkEnvironmentVariables: function() { return /* binding */ checkEnvironmentVariables; },\n/* harmony export */   config: function() { return /* binding */ config; },\n/* harmony export */   debugEnv: function() { return /* binding */ debugEnv; }\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\n// Verificação de variáveis de ambiente\nfunction checkEnvironmentVariables() {\n    const requiredEnvVars = {\n        NEXT_PUBLIC_SUPABASE_URL: process.env.NEXT_PUBLIC_SUPABASE_URL,\n        NEXT_PUBLIC_SUPABASE_ANON_KEY: process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n    };\n    const missingVars = Object.entries(requiredEnvVars).filter((param)=>{\n        let [, value] = param;\n        return !value;\n    }).map((param)=>{\n        let [key] = param;\n        return key;\n    });\n    if (missingVars.length > 0) {\n        console.error(\"❌ Missing environment variables:\", missingVars);\n        throw new Error(\"Missing required environment variables: \".concat(missingVars.join(\", \")));\n    }\n    console.log(\"✅ Environment variables loaded successfully\");\n    return true;\n}\n// Configurações do sistema\nconst config = {\n    supabase: {\n        url: process.env.NEXT_PUBLIC_SUPABASE_URL,\n        anonKey: process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n    },\n    app: {\n        name: \"Cl\\xednica Ballarin - Controle de Estoque\",\n        version: \"1.0.0\",\n        environment: \"development\" || 0\n    }\n};\n// Debug helper\nfunction debugEnv() {\n    if (true) {\n        console.log(\"\\uD83D\\uDD27 Environment Variables Debug:\");\n        console.log(\"NODE_ENV:\", \"development\");\n        console.log(\"SUPABASE_URL:\", process.env.NEXT_PUBLIC_SUPABASE_URL ? \"✅ Set\" : \"❌ Missing\");\n        console.log(\"SUPABASE_ANON_KEY:\", process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY ? \"✅ Set\" : \"❌ Missing\");\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9lbnYtY2hlY2sudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHVDQUF1QztBQUNoQyxTQUFTQTtJQUNkLE1BQU1DLGtCQUFrQjtRQUN0QkMsMEJBQTBCQyxPQUFPQSxDQUFDQyxHQUFHLENBQUNGLHdCQUF3QjtRQUM5REcsK0JBQStCRixPQUFPQSxDQUFDQyxHQUFHLENBQUNDLDZCQUE2QjtJQUMxRTtJQUVBLE1BQU1DLGNBQWNDLE9BQU9DLE9BQU8sQ0FBQ1AsaUJBQ2hDUSxNQUFNLENBQUM7WUFBQyxHQUFHQyxNQUFNO2VBQUssQ0FBQ0E7T0FDdkJDLEdBQUcsQ0FBQztZQUFDLENBQUNDLElBQUk7ZUFBS0E7O0lBRWxCLElBQUlOLFlBQVlPLE1BQU0sR0FBRyxHQUFHO1FBQzFCQyxRQUFRQyxLQUFLLENBQUMsb0NBQW9DVDtRQUNsRCxNQUFNLElBQUlVLE1BQU0sMkNBQWtFLE9BQXZCVixZQUFZVyxJQUFJLENBQUM7SUFDOUU7SUFFQUgsUUFBUUksR0FBRyxDQUFDO0lBQ1osT0FBTztBQUNUO0FBRUEsMkJBQTJCO0FBQ3BCLE1BQU1DLFNBQVM7SUFDcEJDLFVBQVU7UUFDUkMsS0FBS2xCLE9BQU9BLENBQUNDLEdBQUcsQ0FBQ0Ysd0JBQXdCO1FBQ3pDb0IsU0FBU25CLE9BQU9BLENBQUNDLEdBQUcsQ0FBQ0MsNkJBQTZCO0lBQ3BEO0lBQ0FrQixLQUFLO1FBQ0hDLE1BQU07UUFDTkMsU0FBUztRQUNUQyxhQUFhdkIsaUJBQXdCO0lBQ3ZDO0FBQ0YsRUFBQztBQUVELGVBQWU7QUFDUixTQUFTd0I7SUFDZCxJQUFJeEIsSUFBeUIsRUFBZTtRQUMxQ1csUUFBUUksR0FBRyxDQUFDO1FBQ1pKLFFBQVFJLEdBQUcsQ0FBQyxhQXJDaEI7UUFzQ0lKLFFBQVFJLEdBQUcsQ0FBQyxpQkFBaUJmLE9BQU9BLENBQUNDLEdBQUcsQ0FBQ0Ysd0JBQXdCLEdBQUcsVUFBVTtRQUM5RVksUUFBUUksR0FBRyxDQUFDLHNCQUFzQmYsT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDQyw2QkFBNkIsR0FBRyxVQUFVO0lBQzFGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL2Vudi1jaGVjay50cz9hY2U3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFZlcmlmaWNhw6fDo28gZGUgdmFyacOhdmVpcyBkZSBhbWJpZW50ZVxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrRW52aXJvbm1lbnRWYXJpYWJsZXMoKSB7XG4gIGNvbnN0IHJlcXVpcmVkRW52VmFycyA9IHtcbiAgICBORVhUX1BVQkxJQ19TVVBBQkFTRV9VUkw6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCxcbiAgICBORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWTogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfQU5PTl9LRVksXG4gIH1cblxuICBjb25zdCBtaXNzaW5nVmFycyA9IE9iamVjdC5lbnRyaWVzKHJlcXVpcmVkRW52VmFycylcbiAgICAuZmlsdGVyKChbLCB2YWx1ZV0pID0+ICF2YWx1ZSlcbiAgICAubWFwKChba2V5XSkgPT4ga2V5KVxuXG4gIGlmIChtaXNzaW5nVmFycy5sZW5ndGggPiAwKSB7XG4gICAgY29uc29sZS5lcnJvcign4p2MIE1pc3NpbmcgZW52aXJvbm1lbnQgdmFyaWFibGVzOicsIG1pc3NpbmdWYXJzKVxuICAgIHRocm93IG5ldyBFcnJvcihgTWlzc2luZyByZXF1aXJlZCBlbnZpcm9ubWVudCB2YXJpYWJsZXM6ICR7bWlzc2luZ1ZhcnMuam9pbignLCAnKX1gKVxuICB9XG5cbiAgY29uc29sZS5sb2coJ+KchSBFbnZpcm9ubWVudCB2YXJpYWJsZXMgbG9hZGVkIHN1Y2Nlc3NmdWxseScpXG4gIHJldHVybiB0cnVlXG59XG5cbi8vIENvbmZpZ3VyYcOnw7VlcyBkbyBzaXN0ZW1hXG5leHBvcnQgY29uc3QgY29uZmlnID0ge1xuICBzdXBhYmFzZToge1xuICAgIHVybDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMISxcbiAgICBhbm9uS2V5OiBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19TVVBBQkFTRV9BTk9OX0tFWSEsXG4gIH0sXG4gIGFwcDoge1xuICAgIG5hbWU6ICdDbMOtbmljYSBCYWxsYXJpbiAtIENvbnRyb2xlIGRlIEVzdG9xdWUnLFxuICAgIHZlcnNpb246ICcxLjAuMCcsXG4gICAgZW52aXJvbm1lbnQ6IHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8ICdkZXZlbG9wbWVudCcsXG4gIH1cbn1cblxuLy8gRGVidWcgaGVscGVyXG5leHBvcnQgZnVuY3Rpb24gZGVidWdFbnYoKSB7XG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ2RldmVsb3BtZW50Jykge1xuICAgIGNvbnNvbGUubG9nKCfwn5SnIEVudmlyb25tZW50IFZhcmlhYmxlcyBEZWJ1ZzonKVxuICAgIGNvbnNvbGUubG9nKCdOT0RFX0VOVjonLCBwcm9jZXNzLmVudi5OT0RFX0VOVilcbiAgICBjb25zb2xlLmxvZygnU1VQQUJBU0VfVVJMOicsIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX1VSTCA/ICfinIUgU2V0JyA6ICfinYwgTWlzc2luZycpXG4gICAgY29uc29sZS5sb2coJ1NVUEFCQVNFX0FOT05fS0VZOicsIHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZID8gJ+KchSBTZXQnIDogJ+KdjCBNaXNzaW5nJylcbiAgfVxufSJdLCJuYW1lcyI6WyJjaGVja0Vudmlyb25tZW50VmFyaWFibGVzIiwicmVxdWlyZWRFbnZWYXJzIiwiTkVYVF9QVUJMSUNfU1VQQUJBU0VfVVJMIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX1NVUEFCQVNFX0FOT05fS0VZIiwibWlzc2luZ1ZhcnMiLCJPYmplY3QiLCJlbnRyaWVzIiwiZmlsdGVyIiwidmFsdWUiLCJtYXAiLCJrZXkiLCJsZW5ndGgiLCJjb25zb2xlIiwiZXJyb3IiLCJFcnJvciIsImpvaW4iLCJsb2ciLCJjb25maWciLCJzdXBhYmFzZSIsInVybCIsImFub25LZXkiLCJhcHAiLCJuYW1lIiwidmVyc2lvbiIsImVudmlyb25tZW50IiwiZGVidWdFbnYiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/env-check.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/supabase.ts":
/*!*************************!*\
  !*** ./lib/supabase.ts ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   supabase: function() { return /* binding */ supabase; },\n/* harmony export */   supabaseApi: function() { return /* binding */ supabaseApi; }\n/* harmony export */ });\n/* harmony import */ var _supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @supabase/supabase-js */ \"(app-pages-browser)/./node_modules/@supabase/supabase-js/dist/module/index.js\");\n/* harmony import */ var _lib_env_check__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/env-check */ \"(app-pages-browser)/./lib/env-check.ts\");\n\n\n// Verificar env vars na inicialização\n(0,_lib_env_check__WEBPACK_IMPORTED_MODULE_0__.checkEnvironmentVariables)();\nconst supabase = (0,_supabase_supabase_js__WEBPACK_IMPORTED_MODULE_1__.createClient)(_lib_env_check__WEBPACK_IMPORTED_MODULE_0__.config.supabase.url, _lib_env_check__WEBPACK_IMPORTED_MODULE_0__.config.supabase.anonKey, {\n    auth: {\n        persistSession: false,\n        autoRefreshToken: false\n    },\n    db: {\n        schema: \"public\"\n    }\n});\n// Helper functions for common operations\nconst supabaseApi = {\n    // Autenticação\n    async authenticateUser (username, password) {\n        const { data, error } = await supabase.from(\"usuarios_internos\").select(\"*\").eq(\"usuario\", username).eq(\"senha\", password).single();\n        if (error) throw error;\n        return data;\n    },\n    // Produtos (SKUs)\n    async getProdutos () {\n        const { data, error } = await supabase.from(\"skus\").select(\"\\n        *,\\n        lotes!inner(*)\\n      \").eq(\"status_estoque\", \"Ativo\");\n        if (error) throw error;\n        return data;\n    },\n    // Movimentações de estoque\n    async createMovimentacao (movimentacao) {\n        const { data, error } = await supabase.from(\"movimentacoes_estoque\").insert(movimentacao).select().single();\n        if (error) throw error;\n        return data;\n    },\n    // Atualizar quantidade do lote\n    async updateLoteQuantidade (id_lote, novaQuantidade) {\n        const { data, error } = await supabase.from(\"lotes\").update({\n            quantidade_disponivel: novaQuantidade\n        }).eq(\"id_lote\", id_lote).select().single();\n        if (error) throw error;\n        return data;\n    },\n    // Buscar histórico de movimentações\n    async getMovimentacoes () {\n        let limit = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 50;\n        const { data, error } = await supabase.from(\"movimentacoes_estoque\").select(\"\\n        *,\\n        lotes!inner(\\n          id_sku,\\n          validade,\\n          skus!inner(nome_produto)\\n        )\\n      \").order(\"data_movimentacao\", {\n            ascending: false\n        }).limit(limit);\n        if (error) throw error;\n        return data;\n    },\n    // Classes terapêuticas\n    async getClassesTerapeuticas () {\n        const { data, error } = await supabase.from(\"classes_terapeuticas\").select(\"*\");\n        if (error) throw error;\n        return data;\n    }\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9zdXBhYmFzZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQW9EO0FBRWU7QUFFbkUsc0NBQXNDO0FBQ3RDQyx5RUFBeUJBO0FBRWxCLE1BQU1FLFdBQVdILG1FQUFZQSxDQUFXRSxrREFBTUEsQ0FBQ0MsUUFBUSxDQUFDQyxHQUFHLEVBQUVGLGtEQUFNQSxDQUFDQyxRQUFRLENBQUNFLE9BQU8sRUFBRTtJQUMzRkMsTUFBTTtRQUNKQyxnQkFBZ0I7UUFDaEJDLGtCQUFrQjtJQUNwQjtJQUNBQyxJQUFJO1FBQ0ZDLFFBQVE7SUFDVjtBQUNGLEdBQUU7QUFFRix5Q0FBeUM7QUFDbEMsTUFBTUMsY0FBYztJQUN6QixlQUFlO0lBQ2YsTUFBTUMsa0JBQWlCQyxRQUFnQixFQUFFQyxRQUFnQjtRQUN2RCxNQUFNLEVBQUVDLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTWIsU0FDM0JjLElBQUksQ0FBQyxxQkFDTEMsTUFBTSxDQUFDLEtBQ1BDLEVBQUUsQ0FBQyxXQUFXTixVQUNkTSxFQUFFLENBQUMsU0FBU0wsVUFDWk0sTUFBTTtRQUVULElBQUlKLE9BQU8sTUFBTUE7UUFDakIsT0FBT0Q7SUFDVDtJQUVBLGtCQUFrQjtJQUNsQixNQUFNTTtRQUNKLE1BQU0sRUFBRU4sSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNYixTQUMzQmMsSUFBSSxDQUFDLFFBQ0xDLE1BQU0sQ0FBRSxnREFJUkMsRUFBRSxDQUFDLGtCQUFrQjtRQUV4QixJQUFJSCxPQUFPLE1BQU1BO1FBQ2pCLE9BQU9EO0lBQ1Q7SUFFQSwyQkFBMkI7SUFDM0IsTUFBTU8sb0JBQW1CQyxZQU14QjtRQUNDLE1BQU0sRUFBRVIsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNYixTQUMzQmMsSUFBSSxDQUFDLHlCQUNMTyxNQUFNLENBQUNELGNBQ1BMLE1BQU0sR0FDTkUsTUFBTTtRQUVULElBQUlKLE9BQU8sTUFBTUE7UUFDakIsT0FBT0Q7SUFDVDtJQUVBLCtCQUErQjtJQUMvQixNQUFNVSxzQkFBcUJDLE9BQWUsRUFBRUMsY0FBc0I7UUFDaEUsTUFBTSxFQUFFWixJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1iLFNBQzNCYyxJQUFJLENBQUMsU0FDTFcsTUFBTSxDQUFDO1lBQUVDLHVCQUF1QkY7UUFBZSxHQUMvQ1IsRUFBRSxDQUFDLFdBQVdPLFNBQ2RSLE1BQU0sR0FDTkUsTUFBTTtRQUVULElBQUlKLE9BQU8sTUFBTUE7UUFDakIsT0FBT0Q7SUFDVDtJQUVBLG9DQUFvQztJQUNwQyxNQUFNZTtZQUFpQkMsUUFBQUEsaUVBQVE7UUFDN0IsTUFBTSxFQUFFaEIsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNYixTQUMzQmMsSUFBSSxDQUFDLHlCQUNMQyxNQUFNLENBQUUscUlBUVJjLEtBQUssQ0FBQyxxQkFBcUI7WUFBRUMsV0FBVztRQUFNLEdBQzlDRixLQUFLLENBQUNBO1FBRVQsSUFBSWYsT0FBTyxNQUFNQTtRQUNqQixPQUFPRDtJQUNUO0lBRUEsdUJBQXVCO0lBQ3ZCLE1BQU1tQjtRQUNKLE1BQU0sRUFBRW5CLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTWIsU0FDM0JjLElBQUksQ0FBQyx3QkFDTEMsTUFBTSxDQUFDO1FBRVYsSUFBSUYsT0FBTyxNQUFNQTtRQUNqQixPQUFPRDtJQUNUO0FBQ0YsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvc3VwYWJhc2UudHM/Yzk5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVDbGllbnQgfSBmcm9tICdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnXG5pbXBvcnQgeyBEYXRhYmFzZSB9IGZyb20gJ0AvdHlwZXMvZGF0YWJhc2UnXG5pbXBvcnQgeyBjaGVja0Vudmlyb25tZW50VmFyaWFibGVzLCBjb25maWcgfSBmcm9tICdAL2xpYi9lbnYtY2hlY2snXG5cbi8vIFZlcmlmaWNhciBlbnYgdmFycyBuYSBpbmljaWFsaXphw6fDo29cbmNoZWNrRW52aXJvbm1lbnRWYXJpYWJsZXMoKVxuXG5leHBvcnQgY29uc3Qgc3VwYWJhc2UgPSBjcmVhdGVDbGllbnQ8RGF0YWJhc2U+KGNvbmZpZy5zdXBhYmFzZS51cmwsIGNvbmZpZy5zdXBhYmFzZS5hbm9uS2V5LCB7XG4gIGF1dGg6IHtcbiAgICBwZXJzaXN0U2Vzc2lvbjogZmFsc2UsIC8vIFNpc3RlbWEgaW50ZXJubyBuw6NvIHByZWNpc2EgZGUgc2Vzc8OjbyBwZXJzaXN0ZW50ZVxuICAgIGF1dG9SZWZyZXNoVG9rZW46IGZhbHNlLFxuICB9LFxuICBkYjoge1xuICAgIHNjaGVtYTogJ3B1YmxpYydcbiAgfVxufSlcblxuLy8gSGVscGVyIGZ1bmN0aW9ucyBmb3IgY29tbW9uIG9wZXJhdGlvbnNcbmV4cG9ydCBjb25zdCBzdXBhYmFzZUFwaSA9IHtcbiAgLy8gQXV0ZW50aWNhw6fDo29cbiAgYXN5bmMgYXV0aGVudGljYXRlVXNlcih1c2VybmFtZTogc3RyaW5nLCBwYXNzd29yZDogc3RyaW5nKSB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCd1c3Vhcmlvc19pbnRlcm5vcycpXG4gICAgICAuc2VsZWN0KCcqJylcbiAgICAgIC5lcSgndXN1YXJpbycsIHVzZXJuYW1lKVxuICAgICAgLmVxKCdzZW5oYScsIHBhc3N3b3JkKVxuICAgICAgLnNpbmdsZSgpXG4gICAgXG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxuICAgIHJldHVybiBkYXRhXG4gIH0sXG5cbiAgLy8gUHJvZHV0b3MgKFNLVXMpXG4gIGFzeW5jIGdldFByb2R1dG9zKCkge1xuICAgIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgICAuZnJvbSgnc2t1cycpXG4gICAgICAuc2VsZWN0KGBcbiAgICAgICAgKixcbiAgICAgICAgbG90ZXMhaW5uZXIoKilcbiAgICAgIGApXG4gICAgICAuZXEoJ3N0YXR1c19lc3RvcXVlJywgJ0F0aXZvJylcbiAgICBcbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yXG4gICAgcmV0dXJuIGRhdGFcbiAgfSxcblxuICAvLyBNb3ZpbWVudGHDp8O1ZXMgZGUgZXN0b3F1ZVxuICBhc3luYyBjcmVhdGVNb3ZpbWVudGFjYW8obW92aW1lbnRhY2FvOiB7XG4gICAgaWRfbG90ZTogbnVtYmVyXG4gICAgdGlwb19tb3ZpbWVudGFjYW86ICdFTlRSQURBJyB8ICdTQUlEQSdcbiAgICBxdWFudGlkYWRlOiBudW1iZXJcbiAgICB1c3VhcmlvOiBzdHJpbmdcbiAgICBvYnNlcnZhY2FvPzogc3RyaW5nXG4gIH0pIHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oJ21vdmltZW50YWNvZXNfZXN0b3F1ZScpXG4gICAgICAuaW5zZXJ0KG1vdmltZW50YWNhbylcbiAgICAgIC5zZWxlY3QoKVxuICAgICAgLnNpbmdsZSgpXG4gICAgXG4gICAgaWYgKGVycm9yKSB0aHJvdyBlcnJvclxuICAgIHJldHVybiBkYXRhXG4gIH0sXG5cbiAgLy8gQXR1YWxpemFyIHF1YW50aWRhZGUgZG8gbG90ZVxuICBhc3luYyB1cGRhdGVMb3RlUXVhbnRpZGFkZShpZF9sb3RlOiBudW1iZXIsIG5vdmFRdWFudGlkYWRlOiBudW1iZXIpIHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oJ2xvdGVzJylcbiAgICAgIC51cGRhdGUoeyBxdWFudGlkYWRlX2Rpc3Bvbml2ZWw6IG5vdmFRdWFudGlkYWRlIH0pXG4gICAgICAuZXEoJ2lkX2xvdGUnLCBpZF9sb3RlKVxuICAgICAgLnNlbGVjdCgpXG4gICAgICAuc2luZ2xlKClcbiAgICBcbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yXG4gICAgcmV0dXJuIGRhdGFcbiAgfSxcblxuICAvLyBCdXNjYXIgaGlzdMOzcmljbyBkZSBtb3ZpbWVudGHDp8O1ZXNcbiAgYXN5bmMgZ2V0TW92aW1lbnRhY29lcyhsaW1pdCA9IDUwKSB7XG4gICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdtb3ZpbWVudGFjb2VzX2VzdG9xdWUnKVxuICAgICAgLnNlbGVjdChgXG4gICAgICAgICosXG4gICAgICAgIGxvdGVzIWlubmVyKFxuICAgICAgICAgIGlkX3NrdSxcbiAgICAgICAgICB2YWxpZGFkZSxcbiAgICAgICAgICBza3VzIWlubmVyKG5vbWVfcHJvZHV0bylcbiAgICAgICAgKVxuICAgICAgYClcbiAgICAgIC5vcmRlcignZGF0YV9tb3ZpbWVudGFjYW8nLCB7IGFzY2VuZGluZzogZmFsc2UgfSlcbiAgICAgIC5saW1pdChsaW1pdClcbiAgICBcbiAgICBpZiAoZXJyb3IpIHRocm93IGVycm9yXG4gICAgcmV0dXJuIGRhdGFcbiAgfSxcblxuICAvLyBDbGFzc2VzIHRlcmFww6p1dGljYXNcbiAgYXN5bmMgZ2V0Q2xhc3Nlc1RlcmFwZXV0aWNhcygpIHtcbiAgICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oJ2NsYXNzZXNfdGVyYXBldXRpY2FzJylcbiAgICAgIC5zZWxlY3QoJyonKVxuICAgIFxuICAgIGlmIChlcnJvcikgdGhyb3cgZXJyb3JcbiAgICByZXR1cm4gZGF0YVxuICB9XG59Il0sIm5hbWVzIjpbImNyZWF0ZUNsaWVudCIsImNoZWNrRW52aXJvbm1lbnRWYXJpYWJsZXMiLCJjb25maWciLCJzdXBhYmFzZSIsInVybCIsImFub25LZXkiLCJhdXRoIiwicGVyc2lzdFNlc3Npb24iLCJhdXRvUmVmcmVzaFRva2VuIiwiZGIiLCJzY2hlbWEiLCJzdXBhYmFzZUFwaSIsImF1dGhlbnRpY2F0ZVVzZXIiLCJ1c2VybmFtZSIsInBhc3N3b3JkIiwiZGF0YSIsImVycm9yIiwiZnJvbSIsInNlbGVjdCIsImVxIiwic2luZ2xlIiwiZ2V0UHJvZHV0b3MiLCJjcmVhdGVNb3ZpbWVudGFjYW8iLCJtb3ZpbWVudGFjYW8iLCJpbnNlcnQiLCJ1cGRhdGVMb3RlUXVhbnRpZGFkZSIsImlkX2xvdGUiLCJub3ZhUXVhbnRpZGFkZSIsInVwZGF0ZSIsInF1YW50aWRhZGVfZGlzcG9uaXZlbCIsImdldE1vdmltZW50YWNvZXMiLCJsaW1pdCIsIm9yZGVyIiwiYXNjZW5kaW5nIiwiZ2V0Q2xhc3Nlc1RlcmFwZXV0aWNhcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/supabase.ts\n"));

/***/ })

});